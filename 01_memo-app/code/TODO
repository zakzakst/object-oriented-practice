残り作業:
  ☐ firebase hostingへのアップロード
  ☐ editページがitemページ以外からアクセスされた場合はitemページにリダイレクト

最後に対応:
  ☐ mixinsにまとめるスクリプトあるか検討
  ☐ 最後にVScodeまわりの修正あれば「00」のほうにコピーしておく


Archive:
  ✔ firebaseへのデータ登録 @done(20-09-28 03:19) @project(残り作業)
  ✔ firebaseのデータ更新ルールをディレクトリごとに設定 @done(20-09-28 03:31) @project(残り作業)
  ✘ 登録されているメモがない場合、トップページに文言を表示 @cancelled(20-09-28 03:47) @project(残り作業)
  ✔ ログイン画面のバリデーション @done(20-09-28 03:45) @project(残り作業)
  ✘ データ読み込み時のローディングアニメーション @cancelled(20-09-28 03:20) @project(残り作業)
  ✔ ログイン認証 @done(20-09-28 03:19) @project(残り作業)
  ✔ ログイン認証した後のユーザーごとのメモの出し分け @done(20-09-28 03:19) @project(残り作業)
  ✔ firebaseの認証・データ読込・書き込みの流れを整理する @done(20-09-28 03:19) @project(残り作業)
  ✔ 読込前の状態でデータを取りにいった場合の処理 @done(20-09-28 03:20) @project(コード内記載)
  ✔ メモ削除前に確認モーダルを表示 @done(20-09-27 03:49) @project(残り作業)
  ✔ 各処理完了後のトースト表示 @done(20-09-27 03:50) @project(残り作業)
  ✔ ログインページ @done(20-09-26 23:51) @project(残り作業)
  ✔ ログアウトボタン @done(20-09-26 22:50) @project(残り作業)
  ✔ SP時の表示 @done(20-09-26 22:26) @project(残り作業)
  ✔ トップページに掲載する内容 @done(20-09-26 22:26) @project(残り作業)
  ✔ ページ遷移の挙動 @done(20-09-26 07:21) @project(残り作業)
  ✔ コンテンツ部分のスクロール @done(20-09-26 11:11) @project(残り作業)
  ✔ メモの作成日、最終更新日データを追加 @done(20-09-26 10:54) @project(残り作業)
  ✔ 作成日・更新日を表示する @done(20-09-26 08:20) @project(残り作業)
  ✔ 作成日・更新日を登録・更新する @done(20-09-26 10:54) @project(残り作業)
  ✔ マークダウンへの対応 @done(20-09-26 07:12) @project(コード内記載)
  ✔ ページ作成後にそのメモのページに遷移させる @done(20-09-26 06:13) @project(コード内記載)
  ✔ バリデーションの実装 @done(20-09-26 06:02) @project(コード内記載)
  ✔ 読込前の状態でデータを取りにいった場合の処理 @done(20-09-26 06:02) @project(コード内記載)
  ✔ メモ更新後にそのメモのページに遷移させる @done(20-09-26 06:13) @project(コード内記載)
  ✔ バリデーションの実装 @done(20-09-26 06:02) @project(コード内記載)
  ✔ マークダウンへの対応 @done(20-09-26 06:17) @project(コード内記載)
  ✔ 削除後のページ遷移のタイミング・挙動検討 @done(20-09-26 06:15) @project(コード内記載)

Memo:
  ■■■ 参考 ■■■
  ・マークダウンのレンダリング
  https://dev.classmethod.jp/articles/nuxtjs-markdown-it/
  https://qiita.com/Yoshihiro-Hirose/items/6fe2ed7e5cd9e145444a
  「markdown-it」も一緒にインストールする必要があった（「@nuxtjs/markdownit」だけインストールしてエラー出た）

  ・非破壊的な配列のソート
  https://qiita.com/mitsuhiro_K/items/f09daee3932716caf07b

  ・SCSSの記述
  https://www.tam-tam.co.jp/tipsnote/html_css/post10708.html
  https://qiita.com/one-a/items/2758511326c09200fded
  https://maku77.github.io/sass/string.html

  ・firebaseの読み取り、書き込み設定
  https://firebase.google.com/docs/database/security?hl=ja

  ■■■ 反省など ■■■
  ・各種ボタンの配置を計画していなかったので、各ページでバラバラになってしまった。次は整理して、まとまりをコンポーネント化したい

  ・storeのmutations内でsettimeoutを使ってstateを変更しようとしたら上手くいかなかった。actionsのほうで処理したら上手くいった

  ・firebaseのupdate、deleteは関数の引数にcallbackを設定できる（promiseオブジェクトが返ってくる訳ではないのでasync、awaitは使わない）

  ・firebaseのupdateは更新データ分のみ上書きしてくれる

  ・少しデータの流れとかごちゃごちゃになってしまったので、「登録されているメモがない場合の表示」「ローディングアニメーション」は対応しない。次の練習で対応
